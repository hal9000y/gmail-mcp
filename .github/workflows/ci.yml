name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  CI_IMAGE_VERSION: v4
  CI_IMAGE_REPO: ghcr.io/${{ github.repository_owner }}/gmail-mcp-ci

jobs:
  build-test-image:
    name: Build Test Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.image.outputs.image }}
    steps:
      - uses: actions/checkout@v5

      - name: Set image output
        id: image
        run: echo "image=${{ env.CI_IMAGE_REPO }}:${{ env.CI_IMAGE_VERSION }}" >> $GITHUB_OUTPUT

      - name: Check version cache
        id: cache-version
        uses: actions/cache@v4
        with:
          path: .ci-image-version
          key: ci-image-${{ env.CI_IMAGE_VERSION }}

      - name: Set up Docker Buildx
        if: steps.cache-version.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: steps.cache-version.outputs.cache-hit != 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: steps.cache-version.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.ci
          push: true
          tags: ${{ env.CI_IMAGE_REPO }}:${{ env.CI_IMAGE_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Mark version as built
        if: steps.cache-version.outputs.cache-hit != 'true'
        run: echo "${{ env.CI_IMAGE_VERSION }}" > .ci-image-version

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.25'
          cache: true

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.4

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build-test-image
    container:
      image: ${{ needs.build-test-image.outputs.image }}
    steps:
      - uses: actions/checkout@v5

      - name: Run tests
        run: go test -v -race ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.25'
          cache: true

      - name: Build
        run: go build -v ./cmd/gmail-mcp